/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteRouteImport } from './routes/_auth/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as NoAuthLoginRouteImport } from './routes/_no-auth/login'
import { Route as AuthDashboardIndexRouteImport } from './routes/_auth/dashboard/index'

const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const NoAuthLoginRoute = NoAuthLoginRouteImport.update({
  id: '/_no-auth/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthDashboardIndexRoute = AuthDashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => AuthRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof NoAuthLoginRoute
  '/dashboard': typeof AuthDashboardIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof NoAuthLoginRoute
  '/dashboard': typeof AuthDashboardIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_no-auth/login': typeof NoAuthLoginRoute
  '/_auth/dashboard/': typeof AuthDashboardIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login' | '/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/dashboard'
  id: '__root__' | '/' | '/_auth' | '/_no-auth/login' | '/_auth/dashboard/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  NoAuthLoginRoute: typeof NoAuthLoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_no-auth/login': {
      id: '/_no-auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof NoAuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/dashboard/': {
      id: '/_auth/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthDashboardIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthDashboardIndexRoute: typeof AuthDashboardIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthDashboardIndexRoute: AuthDashboardIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  NoAuthLoginRoute: NoAuthLoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
